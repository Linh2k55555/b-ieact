import React, { useEffect, useState } from "react";
import axios from "axios";

// ƒê·ªãnh nghƒ©a axios instance m·ªôt l·∫ßn
const axiosInstance = axios.create({
  baseURL: "http://localhost:8080",
  withCredentials: true, // Quan tr·ªçng! ƒê·ªÉ g·ª≠i session cookie
});

const ProductsSection = () => {
  const [products, setProducts] = useState([]);
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  useEffect(() => {
    const checkAuth = async () => {
      try {
        const response = await axios.get("http://localhost:8080/api/auth/check", {
          withCredentials: true, // üî• Quan tr·ªçng! ƒê·∫£m b·∫£o session ƒë∆∞·ª£c g·ª≠i
        });
        console.log("üîç Tr·∫°ng th√°i ƒëƒÉng nh·∫≠p:", response.data);
        setIsAuthenticated(response.data.isAuthenticated);
      } catch (error) {
        console.error("‚ùå L·ªói ki·ªÉm tra ƒëƒÉng nh·∫≠p:", error);
        setIsAuthenticated(false);
      }
    };
  
    checkAuth();
  }, []);
  
  // ‚úÖ L·∫•y danh s√°ch s·∫£n ph·∫©m
  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const response = await axiosInstance.get("/api/products");
        setProducts(response.data);
      } catch (error) {
        console.error("L·ªói khi l·∫•y s·∫£n ph·∫©m:", error);
      }
    };
    fetchProducts();
  }, []);

  // ‚úÖ Th√™m v√†o gi·ªè h√†ng
  const addToCart = async (productId, price, name) => {
    if (!isAuthenticated) {
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng.");
      return;
    }

    try {
      const response = await axiosInstance.post("/api/cart/add", { productId, price, name });
      alert(response.data.message || "Th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng!");
    } catch (error) {
      console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error);
      alert("L·ªói khi th√™m v√†o gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
    }
  };

  return (
    <section className="products-section" id="menu">
      <h2 className="section-title">Menu c·ªßa ch√∫ng t√¥i</h2>
      <div className="products-grid">
        {products.length > 0 ? (
          products.map((product) => (
            <div key={product._id} className="product-card">
              <img
                className="product-image"
                src={`data:image/jpeg;base64,${product.image}`}
                alt={product.name}
              />
              <div className="product-info">
                <h3>{product.name}</h3>
                <p>{product.description}</p>
                <div className="product-price">
                  {product.price.toLocaleString("vi-VN", {
                    style: "currency",
                    currency: "VND",
                  })}
                </div>
                <button
                  className="add-to-cart-btn"
                  onClick={() => addToCart(product._id, product.price, product.name)}
                >
                  Th√™m v√†o gi·ªè h√†ng
                </button>
              </div>
            </div>
          ))
        ) : (
          <p>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o ƒë∆∞·ª£c t√¨m th·∫•y.</p>
        )}
      </div>
    </section>
  );
};

export default ProductsSection;
